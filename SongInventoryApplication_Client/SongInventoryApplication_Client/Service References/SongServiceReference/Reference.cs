//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SongInventoryApplication_Client.SongServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlbumInfo_ReturnType", Namespace="http://schemas.datacontract.org/2004/07/SongApplicationService")]
    [System.SerializableAttribute()]
    public partial class AlbumInfo_ReturnType : SongInventoryApplication_Client.SongServiceReference.SongApplication_ReturnType {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AlbumIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AlbumNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArtistField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SongIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SongNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TrackNumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AlbumId {
            get {
                return this.AlbumIdField;
            }
            set {
                if ((this.AlbumIdField.Equals(value) != true)) {
                    this.AlbumIdField = value;
                    this.RaisePropertyChanged("AlbumId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlbumName {
            get {
                return this.AlbumNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AlbumNameField, value) != true)) {
                    this.AlbumNameField = value;
                    this.RaisePropertyChanged("AlbumName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Artist {
            get {
                return this.ArtistField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtistField, value) != true)) {
                    this.ArtistField = value;
                    this.RaisePropertyChanged("Artist");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Genre {
            get {
                return this.GenreField;
            }
            set {
                if ((object.ReferenceEquals(this.GenreField, value) != true)) {
                    this.GenreField = value;
                    this.RaisePropertyChanged("Genre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Length {
            get {
                return this.LengthField;
            }
            set {
                if ((object.ReferenceEquals(this.LengthField, value) != true)) {
                    this.LengthField = value;
                    this.RaisePropertyChanged("Length");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SongId {
            get {
                return this.SongIdField;
            }
            set {
                if ((this.SongIdField.Equals(value) != true)) {
                    this.SongIdField = value;
                    this.RaisePropertyChanged("SongId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SongName {
            get {
                return this.SongNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SongNameField, value) != true)) {
                    this.SongNameField = value;
                    this.RaisePropertyChanged("SongName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TrackNumber {
            get {
                return this.TrackNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackNumberField, value) != true)) {
                    this.TrackNumberField = value;
                    this.RaisePropertyChanged("TrackNumber");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SongApplication_ReturnType", Namespace="http://schemas.datacontract.org/2004/07/SongApplicationService")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SongInventoryApplication_Client.SongServiceReference.AlbumInfo_ReturnType))]
    public partial class SongApplication_ReturnType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusDescription {
            get {
                return this.StatusDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusDescriptionField, value) != true)) {
                    this.StatusDescriptionField = value;
                    this.RaisePropertyChanged("StatusDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SongServiceReference.ISongService")]
    public interface ISongService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISongService/GetAlbumInformation", ReplyAction="http://tempuri.org/ISongService/GetAlbumInformationResponse")]
        System.Collections.Generic.List<SongInventoryApplication_Client.SongServiceReference.AlbumInfo_ReturnType> GetAlbumInformation(string albumName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISongService/GetAlbumInformation", ReplyAction="http://tempuri.org/ISongService/GetAlbumInformationResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<SongInventoryApplication_Client.SongServiceReference.AlbumInfo_ReturnType>> GetAlbumInformationAsync(string albumName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISongService/AddSongToAlbum", ReplyAction="http://tempuri.org/ISongService/AddSongToAlbumResponse")]
        SongInventoryApplication_Client.SongServiceReference.AddSongToAlbumResponse AddSongToAlbum(SongInventoryApplication_Client.SongServiceReference.AddSongToAlbumRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISongService/AddSongToAlbum", ReplyAction="http://tempuri.org/ISongService/AddSongToAlbumResponse")]
        System.Threading.Tasks.Task<SongInventoryApplication_Client.SongServiceReference.AddSongToAlbumResponse> AddSongToAlbumAsync(SongInventoryApplication_Client.SongServiceReference.AddSongToAlbumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISongService/UpdateSongInfo", ReplyAction="http://tempuri.org/ISongService/UpdateSongInfoResponse")]
        SongInventoryApplication_Client.SongServiceReference.SongApplication_ReturnType UpdateSongInfo(string songId, string albumId, string songName, string albumName, string songLength, string trackNumber, string genre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISongService/UpdateSongInfo", ReplyAction="http://tempuri.org/ISongService/UpdateSongInfoResponse")]
        System.Threading.Tasks.Task<SongInventoryApplication_Client.SongServiceReference.SongApplication_ReturnType> UpdateSongInfoAsync(string songId, string albumId, string songName, string albumName, string songLength, string trackNumber, string genre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISongService/RemoveSongInfo", ReplyAction="http://tempuri.org/ISongService/RemoveSongInfoResponse")]
        SongInventoryApplication_Client.SongServiceReference.SongApplication_ReturnType RemoveSongInfo(string albumId, string songId, string songName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISongService/RemoveSongInfo", ReplyAction="http://tempuri.org/ISongService/RemoveSongInfoResponse")]
        System.Threading.Tasks.Task<SongInventoryApplication_Client.SongServiceReference.SongApplication_ReturnType> RemoveSongInfoAsync(string albumId, string songId, string songName);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddSongToAlbum", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AddSongToAlbumRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string albumName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string albumId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string songName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string songLength;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string trackNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string genre;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public string songId;
        
        public AddSongToAlbumRequest() {
        }
        
        public AddSongToAlbumRequest(string albumName, string albumId, string songName, string songLength, string trackNumber, string genre, string songId) {
            this.albumName = albumName;
            this.albumId = albumId;
            this.songName = songName;
            this.songLength = songLength;
            this.trackNumber = trackNumber;
            this.genre = genre;
            this.songId = songId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddSongToAlbumResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AddSongToAlbumResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public SongInventoryApplication_Client.SongServiceReference.SongApplication_ReturnType AddSongToAlbumResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string songId;
        
        public AddSongToAlbumResponse() {
        }
        
        public AddSongToAlbumResponse(SongInventoryApplication_Client.SongServiceReference.SongApplication_ReturnType AddSongToAlbumResult, string songId) {
            this.AddSongToAlbumResult = AddSongToAlbumResult;
            this.songId = songId;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISongServiceChannel : SongInventoryApplication_Client.SongServiceReference.ISongService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SongServiceClient : System.ServiceModel.ClientBase<SongInventoryApplication_Client.SongServiceReference.ISongService>, SongInventoryApplication_Client.SongServiceReference.ISongService {
        
        public SongServiceClient() {
        }
        
        public SongServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SongServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SongServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SongServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<SongInventoryApplication_Client.SongServiceReference.AlbumInfo_ReturnType> GetAlbumInformation(string albumName) {
            return base.Channel.GetAlbumInformation(albumName);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<SongInventoryApplication_Client.SongServiceReference.AlbumInfo_ReturnType>> GetAlbumInformationAsync(string albumName) {
            return base.Channel.GetAlbumInformationAsync(albumName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SongInventoryApplication_Client.SongServiceReference.AddSongToAlbumResponse SongInventoryApplication_Client.SongServiceReference.ISongService.AddSongToAlbum(SongInventoryApplication_Client.SongServiceReference.AddSongToAlbumRequest request) {
            return base.Channel.AddSongToAlbum(request);
        }
        
        public SongInventoryApplication_Client.SongServiceReference.SongApplication_ReturnType AddSongToAlbum(string albumName, string albumId, string songName, string songLength, string trackNumber, string genre, ref string songId) {
            SongInventoryApplication_Client.SongServiceReference.AddSongToAlbumRequest inValue = new SongInventoryApplication_Client.SongServiceReference.AddSongToAlbumRequest();
            inValue.albumName = albumName;
            inValue.albumId = albumId;
            inValue.songName = songName;
            inValue.songLength = songLength;
            inValue.trackNumber = trackNumber;
            inValue.genre = genre;
            inValue.songId = songId;
            SongInventoryApplication_Client.SongServiceReference.AddSongToAlbumResponse retVal = ((SongInventoryApplication_Client.SongServiceReference.ISongService)(this)).AddSongToAlbum(inValue);
            songId = retVal.songId;
            return retVal.AddSongToAlbumResult;
        }
        
        public System.Threading.Tasks.Task<SongInventoryApplication_Client.SongServiceReference.AddSongToAlbumResponse> AddSongToAlbumAsync(SongInventoryApplication_Client.SongServiceReference.AddSongToAlbumRequest request) {
            return base.Channel.AddSongToAlbumAsync(request);
        }
        
        public SongInventoryApplication_Client.SongServiceReference.SongApplication_ReturnType UpdateSongInfo(string songId, string albumId, string songName, string albumName, string songLength, string trackNumber, string genre) {
            return base.Channel.UpdateSongInfo(songId, albumId, songName, albumName, songLength, trackNumber, genre);
        }
        
        public System.Threading.Tasks.Task<SongInventoryApplication_Client.SongServiceReference.SongApplication_ReturnType> UpdateSongInfoAsync(string songId, string albumId, string songName, string albumName, string songLength, string trackNumber, string genre) {
            return base.Channel.UpdateSongInfoAsync(songId, albumId, songName, albumName, songLength, trackNumber, genre);
        }
        
        public SongInventoryApplication_Client.SongServiceReference.SongApplication_ReturnType RemoveSongInfo(string albumId, string songId, string songName) {
            return base.Channel.RemoveSongInfo(albumId, songId, songName);
        }
        
        public System.Threading.Tasks.Task<SongInventoryApplication_Client.SongServiceReference.SongApplication_ReturnType> RemoveSongInfoAsync(string albumId, string songId, string songName) {
            return base.Channel.RemoveSongInfoAsync(albumId, songId, songName);
        }
    }
}
